<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [FlyThingsLite_X1\FlyThingsLite_X1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image FlyThingsLite_X1\FlyThingsLite_X1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Jul 02 10:37:24 2024
<BR><P>
<H3>Maximum Stack Usage =        704 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
procMsg &rArr; procUartUpdateReq &rArr; processUpgrade &rArr; I_UART_Transmit &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[f]">DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from stm32g0xx_it.o(i.DMA1_Channel1_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from stm32g0xx_it.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from stm32g0xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32g0xx_it.o(i.HardFault_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[18]">I2C2_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32g0xx_it.o(i.NMI_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32g0xx_it.o(i.PendSV_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[7]">RTC_TAMP_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1a]">SPI2_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32g0xx_it.o(i.SVC_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32g0xx_it.o(i.SysTick_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1e]">SystemInit</a> from system_stm32g0xx.o(i.SystemInit) referenced from startup_stm32g030xx.o(.text)
 <LI><a href="#[14]">TIM14_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[15]">TIM16_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[16]">TIM17_IRQHandler</a> from dev_time17.o(i.TIM17_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[20]">UART_DMAAbortOnError</a> from stm32g0xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32g0xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1c]">USART2_IRQHandler</a> from uartupgradedev.o(i.USART2_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[23]">UserProcKey</a> from menu.o(i.UserProcKey) referenced from menu.o(i.ui_menu_on_page_open)
 <LI><a href="#[24]">UserProcKey</a> from test2.o(i.UserProcKey) referenced from test2.o(i.ui_test2_on_page_open)
 <LI><a href="#[25]">UserProcKey</a> from test.o(i.UserProcKey) referenced from test.o(i.ui_test_on_page_open)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32g030xx.o(.text)
 <LI><a href="#[22]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[3f]">deinitdev</a> from uartupgradedev.o(i.deinitdev) referenced from uartupgradedev.o(.constdata)
 <LI><a href="#[33]">event_deinit</a> from sdl_event.o(i.event_deinit) referenced from usermain.o(.constdata)
 <LI><a href="#[30]">event_init</a> from sdl_event.o(i.event_init) referenced from usermain.o(.constdata)
 <LI><a href="#[34]">event_poll</a> from sdl_event.o(i.event_poll) referenced from usermain.o(.constdata)
 <LI><a href="#[26]">fly_flash_init</a> from serialflash.o(i.fly_flash_init) referenced from serialflash.o(.constdata)
 <LI><a href="#[21]">fputc</a> from uartupgradedev.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[27]">fy_flash_dmainit</a> from serialflash.o(i.fy_flash_dmainit) referenced from serialflash.o(.constdata)
 <LI><a href="#[2b]">fy_flash_isreceiveing</a> from serialflash.o(i.fy_flash_isreceiveing) referenced from serialflash.o(.constdata)
 <LI><a href="#[2a]">fy_flash_waitreceive_done</a> from serialflash.o(i.fy_flash_waitreceive_done) referenced from serialflash.o(.constdata)
 <LI><a href="#[2c]">init_other</a> from other_app.o(i.init_other) referenced from other_app.o(.constdata)
 <LI><a href="#[3e]">initdev</a> from uartupgradedev.o(i.initdev) referenced from uartupgradedev.o(.constdata)
 <LI><a href="#[1d]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[3b]">on_animation_play_end</a> from ui_context.o(i.on_animation_play_end) referenced from usermain.o(.constdata)
 <LI><a href="#[39]">on_button_touch_event</a> from ui_context.o(i.on_button_touch_event) referenced from usermain.o(.constdata)
 <LI><a href="#[3c]">on_increment_change</a> from usermain.o(i.on_increment_change) referenced from usermain.o(.constdata)
 <LI><a href="#[38]">on_page_open</a> from ui_context.o(i.on_page_open) referenced from usermain.o(.constdata)
 <LI><a href="#[3a]">on_progress_changed</a> from ui_context.o(i.on_progress_changed) referenced from usermain.o(.constdata)
 <LI><a href="#[37]">on_timer</a> from ui_context.o(i.on_timer) referenced from usermain.o(.constdata)
 <LI><a href="#[3d]">printf</a> from printfa.o(i.__0printf) referenced from usermain.o(.constdata)
 <LI><a href="#[40]">procMsg</a> from uartupgradedev.o(i.procMsg) referenced from uartupgradedev.o(.constdata)
 <LI><a href="#[2d]">procOtherMsg</a> from other_app.o(i.procOtherMsg) referenced from other_app.o(.constdata)
 <LI><a href="#[28]">readData</a> from serialflash.o(i.readData) referenced from serialflash.o(.constdata)
 <LI><a href="#[29]">readDataDMA</a> from serialflash.o(i.readDataDMA) referenced from serialflash.o(.constdata)
 <LI><a href="#[35]">timer_check</a> from sdl_timer.o(i.timer_check) referenced from usermain.o(.constdata)
 <LI><a href="#[32]">timer_deinit</a> from sdl_timer.o(i.timer_deinit) referenced from usermain.o(.constdata)
 <LI><a href="#[2f]">timer_init</a> from sdl_timer.o(i.timer_init) referenced from usermain.o(.constdata)
 <LI><a href="#[7a]">ui_air_on_animation_play_end</a> from air.o(i.ui_air_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[5e]">ui_air_on_button_touch_event</a> from air.o(i.ui_air_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[50]">ui_air_on_page_open</a> from air.o(i.ui_air_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[6c]">ui_air_on_progress_changed</a> from air.o(i.ui_air_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[42]">ui_air_on_timer</a> from air.o(i.ui_air_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[7b]">ui_coffe_on_animation_play_end</a> from coffe.o(i.ui_coffe_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[5f]">ui_coffe_on_button_touch_event</a> from coffe.o(i.ui_coffe_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[51]">ui_coffe_on_page_open</a> from coffe.o(i.ui_coffe_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[6d]">ui_coffe_on_progress_changed</a> from coffe.o(i.ui_coffe_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[43]">ui_coffe_on_timer</a> from coffe.o(i.ui_coffe_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[7c]">ui_coffework_on_animation_play_end</a> from coffework.o(i.ui_coffework_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[60]">ui_coffework_on_button_touch_event</a> from coffework.o(i.ui_coffework_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[52]">ui_coffework_on_page_open</a> from coffework.o(i.ui_coffework_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[6e]">ui_coffework_on_progress_changed</a> from coffework.o(i.ui_coffework_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[44]">ui_coffework_on_timer</a> from coffework.o(i.ui_coffework_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[7d]">ui_cook_on_animation_play_end</a> from cook.o(i.ui_cook_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[61]">ui_cook_on_button_touch_event</a> from cook.o(i.ui_cook_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[53]">ui_cook_on_page_open</a> from cook.o(i.ui_cook_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[6f]">ui_cook_on_progress_changed</a> from cook.o(i.ui_cook_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[45]">ui_cook_on_timer</a> from cook.o(i.ui_cook_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[7e]">ui_cookwork_on_animation_play_end</a> from cookwork.o(i.ui_cookwork_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[62]">ui_cookwork_on_button_touch_event</a> from cookwork.o(i.ui_cookwork_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[54]">ui_cookwork_on_page_open</a> from cookwork.o(i.ui_cookwork_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[70]">ui_cookwork_on_progress_changed</a> from cookwork.o(i.ui_cookwork_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[46]">ui_cookwork_on_timer</a> from cookwork.o(i.ui_cookwork_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[79]">ui_menu_on_animation_play_end</a> from menu.o(i.ui_menu_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[5d]">ui_menu_on_button_touch_event</a> from menu.o(i.ui_menu_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[4f]">ui_menu_on_page_open</a> from menu.o(i.ui_menu_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[6b]">ui_menu_on_progress_changed</a> from menu.o(i.ui_menu_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[41]">ui_menu_on_timer</a> from menu.o(i.ui_menu_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[7f]">ui_oil_on_animation_play_end</a> from oil.o(i.ui_oil_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[63]">ui_oil_on_button_touch_event</a> from oil.o(i.ui_oil_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[55]">ui_oil_on_page_open</a> from oil.o(i.ui_oil_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[71]">ui_oil_on_progress_changed</a> from oil.o(i.ui_oil_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[47]">ui_oil_on_timer</a> from oil.o(i.ui_oil_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[80]">ui_rice_on_animation_play_end</a> from rice.o(i.ui_rice_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[64]">ui_rice_on_button_touch_event</a> from rice.o(i.ui_rice_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[56]">ui_rice_on_page_open</a> from rice.o(i.ui_rice_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[72]">ui_rice_on_progress_changed</a> from rice.o(i.ui_rice_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[48]">ui_rice_on_timer</a> from rice.o(i.ui_rice_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[81]">ui_ricework_on_animation_play_end</a> from ricework.o(i.ui_ricework_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[65]">ui_ricework_on_button_touch_event</a> from ricework.o(i.ui_ricework_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[57]">ui_ricework_on_page_open</a> from ricework.o(i.ui_ricework_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[73]">ui_ricework_on_progress_changed</a> from ricework.o(i.ui_ricework_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[49]">ui_ricework_on_timer</a> from ricework.o(i.ui_ricework_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[83]">ui_test2_on_animation_play_end</a> from test2.o(i.ui_test2_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[67]">ui_test2_on_button_touch_event</a> from test2.o(i.ui_test2_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[59]">ui_test2_on_page_open</a> from test2.o(i.ui_test2_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[75]">ui_test2_on_progress_changed</a> from test2.o(i.ui_test2_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[4b]">ui_test2_on_timer</a> from test2.o(i.ui_test2_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[82]">ui_test_on_animation_play_end</a> from test.o(i.ui_test_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[66]">ui_test_on_button_touch_event</a> from test.o(i.ui_test_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[58]">ui_test_on_page_open</a> from test.o(i.ui_test_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[74]">ui_test_on_progress_changed</a> from test.o(i.ui_test_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[4a]">ui_test_on_timer</a> from test.o(i.ui_test_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[85]">ui_wash2_on_animation_play_end</a> from wash2.o(i.ui_wash2_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[69]">ui_wash2_on_button_touch_event</a> from wash2.o(i.ui_wash2_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[5b]">ui_wash2_on_page_open</a> from wash2.o(i.ui_wash2_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[77]">ui_wash2_on_progress_changed</a> from wash2.o(i.ui_wash2_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[4d]">ui_wash2_on_timer</a> from wash2.o(i.ui_wash2_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[84]">ui_wash_on_animation_play_end</a> from wash.o(i.ui_wash_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[68]">ui_wash_on_button_touch_event</a> from wash.o(i.ui_wash_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[5a]">ui_wash_on_page_open</a> from wash.o(i.ui_wash_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[76]">ui_wash_on_progress_changed</a> from wash.o(i.ui_wash_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[4c]">ui_wash_on_timer</a> from wash.o(i.ui_wash_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[86]">ui_washwork_on_animation_play_end</a> from washwork.o(i.ui_washwork_on_animation_play_end) referenced from ui_context.o(.constdata)
 <LI><a href="#[6a]">ui_washwork_on_button_touch_event</a> from washwork.o(i.ui_washwork_on_button_touch_event) referenced from ui_context.o(.constdata)
 <LI><a href="#[5c]">ui_washwork_on_page_open</a> from washwork.o(i.ui_washwork_on_page_open) referenced from ui_context.o(.constdata)
 <LI><a href="#[78]">ui_washwork_on_progress_changed</a> from washwork.o(i.ui_washwork_on_progress_changed) referenced from ui_context.o(.constdata)
 <LI><a href="#[4e]">ui_washwork_on_timer</a> from washwork.o(i.ui_washwork_on_timer) referenced from ui_context.o(.constdata)
 <LI><a href="#[31]">video_deinit</a> from video.o(i.video_deinit) referenced from usermain.o(.constdata)
 <LI><a href="#[36]">video_flip</a> from video.o(i.video_flip) referenced from usermain.o(.constdata)
 <LI><a href="#[2e]">video_init</a> from video.o(i.video_init) referenced from usermain.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(.text)
</UL>
<P><STRONG><a name="[12f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[87]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[130]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[131]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[132]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[133]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[134]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[135]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXChannelBaseAndMask
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test2_on_timer
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ricework_on_timer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_timer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_menu_on_timer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_timer
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_timer
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_timer
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_timer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnQueueSignal
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_timer
</UL>

<P><STRONG><a name="[137]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_timer
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_progress_changed
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_page_open
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_button_touch_event
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_animation_play_end
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitQueue
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IM_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Init
</UL>

<P><STRONG><a name="[13b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_dadd</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[10b]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[88]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[13d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[13e]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[13f]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[140]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[95]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[9e]"></a>CHSC6540_Init</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, dev_chsc6540.c.o(i.CHSC6540_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CHSC6540_Init &rArr; MX_I2C2_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_init
</UL>

<P><STRONG><a name="[a4]"></a>CHSC6540_Scan</STRONG> (Thumb, 274 bytes, Stack size 64 bytes, dev_chsc6540.c.o(i.CHSC6540_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CHSC6540_Scan &rArr; HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_poll
</UL>

<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32g0xx_it.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32g0xx_it.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel2_3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataReader_DMACallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>DataReader_DMACallback</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, serialflash.o(i.DataReader_DMACallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DataReader_DMACallback
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>DeQueue</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ring.o(i.DeQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DeQueue &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueEmpty
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
</UL>

<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32g0xx_it.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI0_1_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>EnQueueSignal</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ring.o(i.EnQueueSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EnQueueSignal &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFull
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
</UL>

<P><STRONG><a name="[d9]"></a>HAL_DMA_Abort</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, stm32g0xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, stm32g0xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, stm32g0xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>HAL_DMA_Init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, stm32g0xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CalcDMAMUXChannelBaseAndMask &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXRequestGenBaseAndMask
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXChannelBaseAndMask
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[a3]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32g0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;video_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Init
</UL>

<P><STRONG><a name="[b4]"></a>HAL_GPIO_EXTI_Falling_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_EXTI_Falling_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Rising_Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Falling_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>HAL_GPIO_EXTI_Rising_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_EXTI_Rising_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>HAL_GPIO_Init</STRONG> (Thumb, 304 bytes, Stack size 20 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IM_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Init
</UL>

<P><STRONG><a name="[122]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readKey
</UL>

<P><STRONG><a name="[a2]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IM_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;video_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Init
</UL>

<P><STRONG><a name="[b2]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32g0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_check
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_poll
</UL>

<P><STRONG><a name="[ef]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32g0xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[f0]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32g0xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2CEx_ConfigDigitalFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[b5]"></a>HAL_I2C_Init</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, stm32g0xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[a6]"></a>HAL_I2C_Master_Receive</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, stm32g0xx_hal_i2c.o(i.HAL_I2C_Master_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Scan
</UL>

<P><STRONG><a name="[a5]"></a>HAL_I2C_Master_Transmit</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, stm32g0xx_hal_i2c.o(i.HAL_I2C_Master_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_I2C_Master_Transmit &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Scan
</UL>

<P><STRONG><a name="[b6]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, stm32g0xx_hal_msp.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[101]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bc]"></a>HAL_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32g0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32g0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_MspInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32g0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ee]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32g0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initdev
</UL>

<P><STRONG><a name="[c0]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
</UL>

<P><STRONG><a name="[c2]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32g0xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_PWREx_ControlVoltageScaling &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[c3]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, stm32g0xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[c4]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[103]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[c5]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[c6]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 940 bytes, Stack size 24 bytes, stm32g0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[c7]"></a>HAL_SPI_Init</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, stm32g0xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CalcDMAMUXChannelBaseAndMask &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[c8]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, stm32g0xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CalcDMAMUXChannelBaseAndMask &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[f6]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, stm32g0xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[ca]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32g0xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
</UL>

<P><STRONG><a name="[cb]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32g0xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[f4]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32g0xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
</UL>

<P><STRONG><a name="[cd]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, stm32g0xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_ETR_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[f9]"></a>HAL_UARTEx_DisableFifoMode</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32g0xx_hal_uart_ex.o(i.HAL_UARTEx_DisableFifoMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UARTEx_DisableFifoMode
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[da]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_uart.o(i.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_uart_ex.o(i.HAL_UARTEx_RxFifoFullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>HAL_UARTEx_SetRxFifoThreshold</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32g0xx_hal_uart_ex.o(i.HAL_UARTEx_SetRxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UARTEx_SetRxFifoThreshold &rArr; UARTEx_SetNbDataToProcess &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[d4]"></a>HAL_UARTEx_SetTxFifoThreshold</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32g0xx_hal_uart_ex.o(i.HAL_UARTEx_SetTxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UARTEx_SetTxFifoThreshold &rArr; UARTEx_SetNbDataToProcess &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[dd]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_uart_ex.o(i.HAL_UARTEx_TxFifoEmptyCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[db]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[d5]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 726 bytes, Stack size 24 bytes, stm32g0xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>HAL_UART_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32g0xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[e0]"></a>HAL_UART_MspInit</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, stm32g0xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e4]"></a>HAL_UART_Transmit</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, stm32g0xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I_UART_Transmit
</UL>

<P><STRONG><a name="[dc]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[e8]"></a>IM_Init</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, im_controls.o(i.IM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IM_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[e9]"></a>I_UART_Transmit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, uartupgradedev.o(i.I_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I_UART_Transmit &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
</UL>

<P><STRONG><a name="[ea]"></a>InitQueue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ring.o(i.InitQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initdev
</UL>

<P><STRONG><a name="[11c]"></a>JumpToIAP</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, uartupgradedev.o(i.JumpToIAP))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
</UL>

<P><STRONG><a name="[eb]"></a>LCD_Clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, video.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;video_init
</UL>

<P><STRONG><a name="[12e]"></a>LCD_WR_DATA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, video.o(i.LCD_WR_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;video_init
</UL>

<P><STRONG><a name="[12d]"></a>LCD_WR_REG</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, video.o(i.LCD_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;video_init
</UL>

<P><STRONG><a name="[127]"></a>LoadKeyCallbackFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, other_app.o(i.LoadKeyCallbackFunc))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test_on_page_open
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test2_on_page_open
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_menu_on_page_open
</UL>

<P><STRONG><a name="[9f]"></a>MX_I2C2_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(i.MX_I2C2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MX_I2C2_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Init
</UL>

<P><STRONG><a name="[f3]"></a>MX_TIM17_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, dev_time17.o(i.MX_TIM17_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MX_TIM17_Init &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>QueueCount</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ring.o(i.QueueCount))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
</UL>

<P><STRONG><a name="[ac]"></a>QueueEmpty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ring.o(i.QueueEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
</UL>

<P><STRONG><a name="[af]"></a>QueueFull</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ring.o(i.QueueFull))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnQueueSignal
</UL>

<P><STRONG><a name="[11f]"></a>Rx_CRC_CCITT</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, uartupgradedev.o(i.Rx_CRC_CCITT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Rx_CRC_CCITT
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[fb]"></a>SerialFlash_EraseSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, serialflash.o(i.SerialFlash_EraseSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SerialFlash_EraseSize &rArr; sendSectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendWriteEnable
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSectorErase
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readStatusRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fy_flash_erase_block
</UL>

<P><STRONG><a name="[ff]"></a>SerialFlash_ProgramInfo</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, serialflash.o(i.SerialFlash_ProgramInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SerialFlash_ProgramInfo &rArr; sendPageProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendWriteEnable
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendPageProgram
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readStatusRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fy_flash_page_write
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>SystemClock_Config</STRONG> (Thumb, 106 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>SystemInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_stm32g0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>TIM17_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dev_time17.o(i.TIM17_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, stm32g0xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[ce]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, stm32g0xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[e2]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, stm32g0xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e3]"></a>UART_CheckIdleState</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, stm32g0xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e1]"></a>UART_SetConfig</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, stm32g0xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e5]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, stm32g0xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[1c]"></a>USART2_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, uartupgradedev.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnQueueSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[107]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[141]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[a7]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_loop
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procKey
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Scan
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_poll
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_washwork_on_button_touch_event
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_wash_on_button_touch_event
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ricework_on_button_touch_event
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_rice_on_button_touch_event
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_button_touch_event
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_menu_on_timer
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_button_touch_event
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cook_on_button_touch_event
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_button_touch_event
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_button_touch_event
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_progress_changed
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_button_touch_event
</UL>

<P><STRONG><a name="[142]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3d]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[143]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[123]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ricework_on_timer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_timer
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_button_touch_event
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_timer
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_timer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_progress_changed
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_timer
</UL>

<P><STRONG><a name="[144]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[145]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[9d]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[121]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32g0xx_hal_dma.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_button_touch_event
</UL>

<P><STRONG><a name="[146]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[147]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[148]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[33]"></a>event_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sdl_event.o(i.event_deinit))
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>event_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sdl_event.o(i.event_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = event_init &rArr; CHSC6540_Init &rArr; MX_I2C2_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>event_poll</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, sdl_event.o(i.event_poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = event_poll &rArr; CHSC6540_Scan &rArr; HAL_I2C_Master_Receive &rArr; I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_enqueue
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHSC6540_Scan
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>fly_flash_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, serialflash.o(i.fly_flash_init))
<BR>[Address Reference Count : 1]<UL><LI> serialflash.o(.constdata)
</UL>
<P><STRONG><a name="[21]"></a>fputc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uartupgradedev.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[27]"></a>fy_flash_dmainit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serialflash.o(i.fy_flash_dmainit))
<BR>[Address Reference Count : 1]<UL><LI> serialflash.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>fy_flash_erase_block</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, serialflash.o(i.fy_flash_erase_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fy_flash_erase_block &rArr; SerialFlash_EraseSize &rArr; sendSectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_EraseSize
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
</UL>

<P><STRONG><a name="[2b]"></a>fy_flash_isreceiveing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, serialflash.o(i.fy_flash_isreceiveing))
<BR>[Address Reference Count : 1]<UL><LI> serialflash.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>fy_flash_page_write</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, serialflash.o(i.fy_flash_page_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fy_flash_page_write &rArr; SerialFlash_ProgramInfo &rArr; sendPageProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_ProgramInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
</UL>

<P><STRONG><a name="[2a]"></a>fy_flash_waitreceive_done</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, serialflash.o(i.fy_flash_waitreceive_done))
<BR>[Address Reference Count : 1]<UL><LI> serialflash.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>get_time_num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dev_time17.o(i.get_time_num))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_loop
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[111]"></a>guiProcKey</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, other_app.o(i.guiProcKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = guiProcKey
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_get_current_page
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procKey
</UL>

<P><STRONG><a name="[113]"></a>image_set_img</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, switch_image.o(i.image_set_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = image_set_img
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_menu_on_timer
</UL>

<P><STRONG><a name="[2c]"></a>init_other</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, other_app.o(i.init_other))
<BR>[Address Reference Count : 1]<UL><LI> other_app.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>loadDev</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, devmodule.o(i.loadDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = loadDev
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[1d]"></a>main</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_loop
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[3b]"></a>on_animation_play_end</STRONG> (Thumb, 42 bytes, Stack size 64 bytes, ui_context.o(i.on_animation_play_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = on_animation_play_end
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_get_current_page
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>on_button_touch_event</STRONG> (Thumb, 46 bytes, Stack size 72 bytes, ui_context.o(i.on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = on_button_touch_event
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_get_current_page
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>on_increment_change</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usermain.o(i.on_increment_change))
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>on_page_open</STRONG> (Thumb, 38 bytes, Stack size 64 bytes, ui_context.o(i.on_page_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = on_page_open
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_get_current_page
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>on_progress_changed</STRONG> (Thumb, 46 bytes, Stack size 72 bytes, ui_context.o(i.on_progress_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = on_progress_changed
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_get_current_page
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>on_timer</STRONG> (Thumb, 46 bytes, Stack size 72 bytes, ui_context.o(i.on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = on_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_get_current_page
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>procKey</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, inputkey.o(i.procKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = procKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiProcKey
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readKey
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procOtherMsg
</UL>

<P><STRONG><a name="[2d]"></a>procOtherMsg</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, other_app.o(i.procOtherMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = procOtherMsg &rArr; procKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> other_app.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>readData</STRONG> (Thumb, 284 bytes, Stack size 20 bytes, serialflash.o(i.readData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = readData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialflash.o(.constdata)
</UL>
<P><STRONG><a name="[29]"></a>readDataDMA</STRONG> (Thumb, 258 bytes, Stack size 20 bytes, serialflash.o(i.readDataDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = readDataDMA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialflash.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>readDeviceId</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, serialflash.o(i.readDeviceId))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = readDeviceId
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
</UL>

<P><STRONG><a name="[119]"></a>readKey</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, inputkey.o(i.readKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readKey
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procKey
</UL>

<P><STRONG><a name="[35]"></a>timer_check</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sdl_timer.o(i.timer_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_check
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_enqueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>timer_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sdl_timer.o(i.timer_deinit))
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>timer_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sdl_timer.o(i.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = timer_init &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>ui_air_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, air.o(i.ui_air_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>ui_air_on_button_touch_event</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, air.o(i.ui_air_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_air_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>ui_air_on_page_open</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, air.o(i.ui_air_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>ui_air_on_progress_changed</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, air.o(i.ui_air_on_progress_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_air_on_progress_changed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>ui_air_on_timer</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, air.o(i.ui_air_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_air_on_timer &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>ui_coffe_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, coffe.o(i.ui_coffe_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>ui_coffe_on_button_touch_event</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, coffe.o(i.ui_coffe_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_coffe_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>ui_coffe_on_page_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, coffe.o(i.ui_coffe_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>ui_coffe_on_progress_changed</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, coffe.o(i.ui_coffe_on_progress_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ui_coffe_on_progress_changed &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>ui_coffe_on_timer</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, coffe.o(i.ui_coffe_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_coffe_on_timer &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_set_value
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>ui_coffework_on_animation_play_end</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, coffework.o(i.ui_coffework_on_animation_play_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_coffework_on_animation_play_end
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>ui_coffework_on_button_touch_event</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, coffework.o(i.ui_coffework_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_coffework_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>ui_coffework_on_page_open</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, coffework.o(i.ui_coffework_on_page_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_coffework_on_page_open
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>ui_coffework_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, coffework.o(i.ui_coffework_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>ui_coffework_on_timer</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, coffework.o(i.ui_coffework_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ui_coffework_on_timer &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>ui_cook_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cook.o(i.ui_cook_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>ui_cook_on_button_touch_event</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, cook.o(i.ui_cook_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_cook_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>ui_cook_on_page_open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cook.o(i.ui_cook_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>ui_cook_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cook.o(i.ui_cook_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>ui_cook_on_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cook.o(i.ui_cook_on_timer))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>ui_cookwork_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookwork.o(i.ui_cookwork_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>ui_cookwork_on_button_touch_event</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, cookwork.o(i.ui_cookwork_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_cookwork_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>ui_cookwork_on_page_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cookwork.o(i.ui_cookwork_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>ui_cookwork_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookwork.o(i.ui_cookwork_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>ui_cookwork_on_timer</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, cookwork.o(i.ui_cookwork_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ui_cookwork_on_timer &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_set_value
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>ui_menu_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu.o(i.ui_menu_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>ui_menu_on_button_touch_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu.o(i.ui_menu_on_button_touch_event))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>ui_menu_on_page_open</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, menu.o(i.ui_menu_on_page_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_menu_on_page_open
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadKeyCallbackFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>ui_menu_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu.o(i.ui_menu_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>ui_menu_on_timer</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, menu.o(i.ui_menu_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_menu_on_timer &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_img
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>ui_oil_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, oil.o(i.ui_oil_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>ui_oil_on_button_touch_event</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, oil.o(i.ui_oil_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ui_oil_on_button_touch_event &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>ui_oil_on_page_open</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oil.o(i.ui_oil_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>ui_oil_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, oil.o(i.ui_oil_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>ui_oil_on_timer</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, oil.o(i.ui_oil_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_oil_on_timer &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>ui_rice_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rice.o(i.ui_rice_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>ui_rice_on_button_touch_event</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rice.o(i.ui_rice_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_rice_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>ui_rice_on_page_open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rice.o(i.ui_rice_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>ui_rice_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rice.o(i.ui_rice_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>ui_rice_on_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rice.o(i.ui_rice_on_timer))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>ui_ricework_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ricework.o(i.ui_ricework_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>ui_ricework_on_button_touch_event</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ricework.o(i.ui_ricework_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_ricework_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>ui_ricework_on_page_open</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ricework.o(i.ui_ricework_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>ui_ricework_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ricework.o(i.ui_ricework_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>ui_ricework_on_timer</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ricework.o(i.ui_ricework_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_ricework_on_timer &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>ui_test2_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test2.o(i.ui_test2_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>ui_test2_on_button_touch_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test2.o(i.ui_test2_on_button_touch_event))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>ui_test2_on_page_open</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, test2.o(i.ui_test2_on_page_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_test2_on_page_open
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadKeyCallbackFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>ui_test2_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test2.o(i.ui_test2_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>ui_test2_on_timer</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, test2.o(i.ui_test2_on_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ui_test2_on_timer &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_draw_imagetext_value
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>ui_test_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.ui_test_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>ui_test_on_button_touch_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.ui_test_on_button_touch_event))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>ui_test_on_page_open</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, test.o(i.ui_test_on_page_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_test_on_page_open &rArr; user_draw_imagetext_value
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_draw_imagetext_value
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadKeyCallbackFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>ui_test_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.ui_test_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>ui_test_on_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.ui_test_on_timer))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>ui_wash2_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash2.o(i.ui_wash2_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>ui_wash2_on_button_touch_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash2.o(i.ui_wash2_on_button_touch_event))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>ui_wash2_on_page_open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash2.o(i.ui_wash2_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>ui_wash2_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash2.o(i.ui_wash2_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>ui_wash2_on_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash2.o(i.ui_wash2_on_timer))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>ui_wash_on_animation_play_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash.o(i.ui_wash_on_animation_play_end))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>ui_wash_on_button_touch_event</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wash.o(i.ui_wash_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_wash_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>ui_wash_on_page_open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash.o(i.ui_wash_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>ui_wash_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash.o(i.ui_wash_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>ui_wash_on_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wash.o(i.ui_wash_on_timer))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>ui_washwork_on_animation_play_end</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, washwork.o(i.ui_washwork_on_animation_play_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_washwork_on_animation_play_end
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>ui_washwork_on_button_touch_event</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, washwork.o(i.ui_washwork_on_button_touch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ui_washwork_on_button_touch_event &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>ui_washwork_on_page_open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, washwork.o(i.ui_washwork_on_page_open))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>ui_washwork_on_progress_changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, washwork.o(i.ui_washwork_on_progress_changed))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>ui_washwork_on_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, washwork.o(i.ui_washwork_on_timer))
<BR>[Address Reference Count : 1]<UL><LI> ui_context.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>user_draw_imagetext_value</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, other_app.o(i.user_draw_imagetext_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = user_draw_imagetext_value
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imagetext_set_text
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserProcKey
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserProcKey
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test_on_page_open
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test2_on_timer
</UL>

<P><STRONG><a name="[115]"></a>user_init</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, usermain.o(i.user_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = user_init &rArr; IM_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_setarg
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_run
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_open_page
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_num
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IM_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadDev
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[116]"></a>user_loop</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, usermain.o(i.user_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = user_loop &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_run
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_num
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>video_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, video.o(i.video_deinit))
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>video_flip</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, video.o(i.video_flip))
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>video_init</STRONG> (Thumb, 604 bytes, Stack size 16 bytes, video.o(i.video_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = video_init &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usermain.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>LCD_Fill</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[126]"></a>animation_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_washwork_on_animation_play_end
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_animation_play_end
</UL>

<P><STRONG><a name="[105]"></a>gui_context_find_widget</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserProcKey
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserProcKey
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_washwork_on_button_touch_event
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_washwork_on_animation_play_end
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_wash_on_button_touch_event
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test_on_page_open
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_test2_on_timer
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ricework_on_timer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ricework_on_button_touch_event
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_rice_on_button_touch_event
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_timer
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_button_touch_event
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_menu_on_timer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_timer
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_button_touch_event
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cook_on_button_touch_event
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_timer
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_page_open
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_button_touch_event
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_animation_play_end
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_timer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_progress_changed
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_button_touch_event
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_timer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_progress_changed
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_button_touch_event
</UL>

<P><STRONG><a name="[112]"></a>gui_context_get_current_page</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_timer
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_progress_changed
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_page_open
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_button_touch_event
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_animation_play_end
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiProcKey
</UL>

<P><STRONG><a name="[12a]"></a>gui_context_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[104]"></a>gui_context_open_page</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserProcKey
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserProcKey
</UL>

<P><STRONG><a name="[12c]"></a>gui_context_run</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_loop
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[12b]"></a>gui_context_setarg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[124]"></a>imagetext_set_text</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_draw_imagetext_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_ricework_on_timer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_timer
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_oil_on_button_touch_event
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_timer
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_timer
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffework_on_page_open
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_timer
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_progress_changed
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_air_on_timer
</UL>

<P><STRONG><a name="[10e]"></a>message_enqueue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_check
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_poll
</UL>

<P><STRONG><a name="[125]"></a>progress_set_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_cookwork_on_timer
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_coffe_on_timer
</UL>

<P><STRONG><a name="[114]"></a>widget_invalidate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flythings_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_set_img
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ed]"></a>MX_GPIO_Init</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>MX_SPI1_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CalcDMAMUXChannelBaseAndMask &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>MX_SPI2_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.MX_SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MX_SPI2_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CalcDMAMUXChannelBaseAndMask &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>MX_TIM1_Init</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, main.o(i.MX_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MX_TIM1_Init &rArr; HAL_TIM_ConfigClockSource &rArr; TIM_ETR_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f7]"></a>MX_TIM3_Init</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, main.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_ConfigClockSource &rArr; TIM_ETR_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fa]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32g0xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>

<P><STRONG><a name="[e6]"></a>I2C_IsErrorOccurred</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, stm32g0xx_hal_i2c.o(i.I2C_IsErrorOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
</UL>

<P><STRONG><a name="[b8]"></a>I2C_TransferConfig</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32g0xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[b7]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, stm32g0xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[b9]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, stm32g0xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[ba]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32g0xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Receive
</UL>

<P><STRONG><a name="[bb]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32g0xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[aa]"></a>DMA_CalcDMAMUXChannelBaseAndMask</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32g0xx_hal_dma.o(i.DMA_CalcDMAMUXChannelBaseAndMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_CalcDMAMUXChannelBaseAndMask &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[b1]"></a>DMA_CalcDMAMUXRequestGenBaseAndMask</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32g0xx_hal_dma.o(i.DMA_CalcDMAMUXRequestGenBaseAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[c1]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32g0xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[d1]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32g0xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[cf]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32g0xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[d0]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32g0xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[20]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32g0xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g0xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[d6]"></a>UART_EndRxTransfer</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32g0xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>UARTEx_SetNbDataToProcess</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32g0xx_hal_uart_ex.o(i.UARTEx_SetNbDataToProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UARTEx_SetNbDataToProcess &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
</UL>

<P><STRONG><a name="[fe]"></a>readStatusRegister</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, serialflash.o(i.readStatusRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readStatusRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_ProgramInfo
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_EraseSize
</UL>

<P><STRONG><a name="[100]"></a>sendPageProgram</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, serialflash.o(i.sendPageProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sendPageProgram
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_ProgramInfo
</UL>

<P><STRONG><a name="[fd]"></a>sendSectorErase</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, serialflash.o(i.sendSectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sendSectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_EraseSize
</UL>

<P><STRONG><a name="[fc]"></a>sendWriteEnable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, serialflash.o(i.sendWriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sendWriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_ProgramInfo
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialFlash_EraseSize
</UL>

<P><STRONG><a name="[3f]"></a>deinitdev</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uartupgradedev.o(i.deinitdev))
<BR>[Address Reference Count : 1]<UL><LI> uartupgradedev.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>initdev</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uartupgradedev.o(i.initdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = initdev &rArr; InitQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitQueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uartupgradedev.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>procMsg</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, uartupgradedev.o(i.procMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = procMsg &rArr; procUartUpdateReq &rArr; processUpgrade &rArr; I_UART_Transmit &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uartupgradedev.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>procUartUpdateReq</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, uartupgradedev.o(i.procUartUpdateReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = procUartUpdateReq &rArr; processUpgrade &rArr; I_UART_Transmit &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToIAP
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade_simple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processUpgrade
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCount
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procMsg
</UL>

<P><STRONG><a name="[11d]"></a>processUpgrade</STRONG> (Thumb, 538 bytes, Stack size 576 bytes, uartupgradedev.o(i.processUpgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = processUpgrade &rArr; I_UART_Transmit &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rx_CRC_CCITT
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I_UART_Transmit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCount
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDeviceId
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fy_flash_page_write
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fy_flash_erase_block
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
</UL>

<P><STRONG><a name="[11e]"></a>processUpgrade_simple</STRONG> (Thumb, 190 bytes, Stack size 280 bytes, uartupgradedev.o(i.processUpgrade_simple))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = processUpgrade_simple &rArr; DeQueue &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCount
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fy_flash_page_write
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fy_flash_erase_block
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;procUartUpdateReq
</UL>

<P><STRONG><a name="[23]"></a>UserProcKey</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, menu.o(i.UserProcKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UserProcKey
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_open_page
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.ui_menu_on_page_open)
</UL>
<P><STRONG><a name="[25]"></a>UserProcKey</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, test.o(i.UserProcKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UserProcKey &rArr; user_draw_imagetext_value
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_draw_imagetext_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test.o(i.ui_test_on_page_open)
</UL>
<P><STRONG><a name="[24]"></a>UserProcKey</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, test2.o(i.UserProcKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UserProcKey &rArr; user_draw_imagetext_value
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_open_page
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_context_find_widget
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_draw_imagetext_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test2.o(i.ui_test2_on_page_open)
</UL>
<P><STRONG><a name="[10a]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[108]"></a>_printf_core</STRONG> (Thumb, 1760 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[10d]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10c]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[22]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[8a]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
